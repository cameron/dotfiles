;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(read-char-history tmm--history face-name-history markdown-gfm-language-history xref--read-identifier-history search-ring yes-or-no-p-history grep-regexp-history buffer-name-history input-method-history compile-history read-number-history empty-history file-name-history set-variable-value-history custom-variable-history goto-line-history query-replace-history read-from-kill-ring-history bookmark-history gpt-command-history extended-command-history ido-file-history minibuffer-history ido-buffer-history))
(setq tmm--history '("h==>Help" "y==>YASnippet" "p==>Projectile" "E==>Elm" "t==>Tools" "b==>Buffers" "o==>Options" "e==>Edit" "f==>File"))
(setq face-name-history '("font-lock-string-face" "rjsx-attr" "rjsx-tag"))
(setq markdown-gfm-language-history '("shell" "bash"))
(setq yes-or-no-p-history '("yes" "no" "yes"))
(setq buffer-name-history '("deploy.yml" "base.yml" "dev.watch-stack" "base.yml" "logic-for-minimal-refetching.html" "Dockerfile" "Doc.py" "Q.py" "process.py" "cfg.py" "url.py" "Q.py" "robotstxt.py" "Q.py" "*ag search regexp:cfg. dir:~/src/dex/*" "process.py" "SQL.py" "index.html" "server.py" "index.html" "dust2.py" "server.py" "wells.js" "Dockerfile<node>" "wells.js" "Dockerfile<node>" "Dockerfile" "run.auto" "run" "docker-compose.yml" "Dockerfile" "wells.js" "Dockerfile" "wells.js" "Dockerfile" "server-http.js" "listen.js" "Dockerfile" "screen" "check_fs.py" "main.py" "boot.py" "check_fs.py" "main.py" "run.py" "main.py" "boot.py" "check_fs.py" "main.py" "pixel.py" "main.py" "pixel.py" "main.py" "*ag search regexp:rainbow dir:~/src/rp2040/*" "pixel.py" "main.py" "check_fs.py" "dust2.py" "log.py" "main.py" "run.py" "adafruit_logging.py" "run.py" "check_fs.py" "boot.py" "run.py" "boot.py" "dust.py" "run.py" "adafruit_logging.py" "run.py" "cp" "run.py" "adafruit_logging.py" "boot.py" "check_fs.py" "adafruit_logging.py" "check_fs.py" "init.py" "cp" "boot.py" "run.py" "boot.py" "run.py" "dust.py" "log.py" "boot.py" "pixel.py<.backup>" "boot.py" "check_fs.py" "run.py" "log.py" "adafruit_logging.py" "log.py" "adafruit_logging.py" "log.py" "main.py" "adafruit_logging.py" "init.py" "main.py"))
(setq compile-history '("make -k "))
(setq file-name-history '("/Users/cam/src/dotfiles/osx-init.sh" "/Users/cam/Library/LaunchAgents/cam.sshfs.plist" "/Users/cam/Library/LaunchAgents/cam.sshfs" "/Users/cam/bin/sshfs.rsync-net" "/Users/cam/.ssh/config" "/Users/cam/Library/LaunchAgents/homebrew.mxcl.emacs.plist" "/Users/cam/Library/LaunchAgents/com.cameron.sshfs.plist" "/Users/cam/Library/LaunchAgents/homebrew.mxcl.emacs.plist" "/Users/cam/bin/sshfs.mount-rsync-net" "/Users/cam/bin/.rsync.backup.exclude" "/Users/cam/bin/rsync.generate-excludes-from-repo-gitignore" "/Users/cam/bin/.rsync.backup.exclude" "/Users/cam/bin/rsync.backup" "/Users/cam/.ssh/config"))
(setq set-variable-value-history '("2"))
(setq custom-variable-history '("python-indent" "python-indent-offset"))
(setq goto-line-history '("526" "58" "25" "19" "86" "69" "92" "57" "78" "51" "79" "80" "70" "86" "11" "76" "77" "76" "37" "64" "76" "36" "21" "8" "151" "122" "111" "107" "101" "97" "87" "96" "87" "85" "79" "70" "34" "28" "123" "57" "161" "56" "610" "209" "103" "87" "127" "121" "417" "672" "278" "758" "626" "538" "583" "572" "585" "418" "423" "392" "218" "111" "66" "114" "136" "111" "109" "74" "55" "73" "78" "75" "61" "83" "50" "182" "133" "113" "92" "50" "549" "36" "53" "209" "115" "35" "78" "186" "154" "134" "92" "68" "296" "51" "185" "54" "16" "63" "80" "112"))
(setq query-replace-history '("worker" #("crawler" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) "span" #("pre" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) "span class=\"code\"" #("pre" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("span" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) "span class=\"code\"" "" "mode" #("connection" 0 10 (isearch-case-fold-search t isearch-regexp-function nil)) "time_struct" #("datetime" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) "attrs_by_gid" #("attrs_by_greenlet" 0 17 (isearch-case-fold-search t isearch-regexp-function nil)) "cos_by_domain" #("fetchers" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) "Q.process" #("q.process" 0 9 (isearch-case-fold-search t isearch-regexp-function nil)) "Q.fet" #("q.fet" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) "fetch" #("crawl" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) "fetcher" #("crawler" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) "" #("lib." 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) "" #("lib." 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) "shell" #("run" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) ".." #("shared-utils-server/src" 0 23 (isearch-case-fold-search t isearch-regexp-function nil)) ".." #("shared-utils-server/src" 0 23 (isearch-case-fold-search t isearch-regexp-function nil)) "monitor_q_docs" #("doc_monitor" 0 11 (isearch-case-fold-search t isearch-regexp-function nil)) "monitor_q_domains" #("domain_q_monitor" 0 16 (isearch-case-fold-search t isearch-regexp-function nil)) "userRes" #("studioRes" 0 9 (isearch-case-fold-search nil isearch-regexp-function nil)) "userData" #("studioData" 0 10 (isearch-case-fold-search nil isearch-regexp-function nil)) "UserData" #("StudioData" 0 10 (isearch-case-fold-search nil isearch-regexp-function nil)) "hyperdiff" #("anart" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) "hyperdiff" #("anart" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) "HD" #("DX" 0 2 (isearch-case-fold-search nil isearch-regexp-function nil)) "hyperdiff" #("dex" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) "setBtnState" #("setBtnStates" 0 12 (isearch-case-fold-search nil isearch-regexp-function nil)) "btnState" "btnStates" "parent" #("parentBranch" 0 12 (isearch-regexp-function nil isearch-case-fold-search nil)) "branch" #("parentBranch" 0 12 (isearch-case-fold-search nil isearch-regexp-function nil)) "" #("parentBranch" 0 12 (isearch-regexp-function nil isearch-case-fold-search nil)) "query" #("params" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) "accordion" #("according" 0 9 (isearch-case-fold-search t isearch-regexp-function nil)) "taskTrie" #("trie" 0 4 (isearch-regexp-function nil isearch-case-fold-search t)) "task" #("exp" 0 3 (isearch-regexp-function nil isearch-case-fold-search t)) "marginLeft" #("margin" 0 6 (isearch-case-fold-search t isearch-regexp-function nil)) "tasksState" #("taskState" 0 9 (isearch-regexp-function nil isearch-case-fold-search nil)) "selectExperience" #("checkboxCallback" 0 16 (isearch-regexp-function nil isearch-case-fold-search nil)) "last_result" #("results" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) "crawl_domain" #("crawler" 0 7 (isearch-case-fold-search t isearch-regexp-function nil)) "crawlers" #("domain_crawlers" 0 15 (isearch-case-fold-search t isearch-regexp-function nil)) "crawler" #("crawl_domain" 0 12 (isearch-case-fold-search t isearch-regexp-function nil)) "domain_crawlers" #("crawlers" 0 8 (isearch-case-fold-search t isearch-regexp-function nil)) "search" #("studio" 0 6 (isearch-regexp-function nil isearch-case-fold-search t)) "dex" #("anart" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) "dex" #("anart" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) "dex" #("anart" 0 5 (isearch-case-fold-search t isearch-regexp-function nil)) "cursor" #("_cursor" 0 7 (isearch-regexp-function nil isearch-case-fold-search t)) "connection" #("_connection" 0 11 (isearch-case-fold-search t isearch-regexp-function nil)) "enqueue"))
(setq bookmark-history '("config.fish" "init.el" "config.fish" "init.el" "config.fish" "init.el"))
(setq gpt-command-history '("postgres query to get unique domains from url column" "postgres query to get unique domains from a url column" "postgres query to get all unique domain names from a url column"))
(setq extended-command-history '("gptel-send" "python-mode" "delete-file" "recover-file" "delete-file" "gptel-context-quit" "gptel-send" "gptel-add" "gptel-send" "delete-file" "indent-region" "delete-file" "gptel-send" "eval-region" "gptel-add-file" "gptel-menu" "gptel" "gptel-add-file" "gptel-add" "gptel-add-file" "typescript-mode" "gptel" "gptel-send" "shell-script-mode" "rjsx-mode" "package-install" "package-refresh-contents" "python-mode" "rjsx-mode" "ag-project" "python-mode" "package-install" "package-refresh-contents" "package-install" "clean-buffer-list" "lsp-install-server" "rjsx-mode" "javascript-mode" "typescript-mode" "rjsx-mode" "delete-file" "rjsx-mode" "customize-face" "rjsx-mode" "typescript-mode" "tsx-ts-helper-mode" "apropos" "typescript-mode" "package-install" "package-refresh-contents" "package-install" "shell-script-mode" "delete-file" "projectile-invalidate-cache" "projectile-version" "eval-region" "eval-buffer" "lsp-mode" "lsp-disconnect" "python-mode" "projectile-invalidate-cache" "projectile-purge-file-from-cache" "load-theme" "package-list-packages" "package-install" "package-refresh-contents" "package-install" "package-refresh-contents" "package-install" "python-indent-guess-indent-offset" "python-mode" "apropos" "set-variable" "python-mode" "compile" "set-variable" "describe-variable" "gpt-dwim" "python-mode" "gpt-mode" "gpt-dwim" "python-mode" "gpt-mode"))
(setq ido-file-history '("osx-init.sh" ".env" "run" ".tmux.workspace-init" "deploy.yaml" "bash" "create" "deploy.yaml" "application.yaml" "deploy.yaml" "service.yaml" "deploy.yaml" ".tmux.workspace-init" "expose-server-locally" ".tmux.workspace-init" "argo.expose-server-port-locally" "argo/" "TIL.md" ".gitignore" "base.yml" "setup-env" ".tmux.workspace-init" ".CFUserTextEncoding" "TIL.md" "tmux.workspace-join" "config.fish" ".gitignore" ".tmux.conf" ".tmux.workspace-init" "Co.py" "loki-config.yaml" ".gitignore" ".tmux.workspace-init" "watch-build-run" "watch-and-build" "watch-stack" ".tmux.workspace-init" "todo.md" "requirements.txt" "docker-compose.yaml" "base.yml" ".tmux.workspace-init" "config.json" "dc" ".dockerignore" ".gitconfig" "mtu-fix.sh" ".env" "config" "credentials" ".gitignore" "building-a-polite-and-fast-web-crawler.html" ".tmux.workspace-init" "logic-for-minimal-refetching.html" "building-a-polite-and-fast-web-crawler.html" ".env" nil "oracle.py" "bash" "dev.yml" "work.py" "__init__.py" "run.py" "main.py" "dust2.py" "index.html" "server.py" "screen" "package.json" "wells.js" "Dockerfile" "docker-compose.yml" "run.auto" "Dockerfile" "run" "build" ".gitignore" "run.auto" "run" ".tmux.workspace-init" "config.json" "docker-compose.yml" "run" "wells.js" "lib/" "recorder.js" "run" "server-http.js" "listen.js" "Dockerfile" "run" "run.auto" "config.json" "Dockerfile" "dust2.py" "readme.md" "screen" "eject" "dust2.py" "dust.py"))
(setq minibuffer-history '("deploy.yml" "crawler/src/lib/co.py" "bin.d/dev.watch-stack" "compose/base.yml" "crawler/src/jobs/fetch.py" "crawler/src/db/SQL.py" "cfg.env" "cfg.prod" "cfg." "crawler/src/cfg.py" "crawler/src/jobs/process.py" "node/bin/build" "yes" "node/Dockerfile" "node/src/wells.js" "device/src/nvmdb.py" "device/src/set_rtc.py" "pulse" "rainbow" "device/src/dust.py" "device/src/run.py" "bin/cp" "init" "5" "device/src/run.py" "device/src/dust.py" "device/src/pixel.py" ".backup/pixel.py" "device/src/pixel.py" "device/main.py" "bin/cp" "bin/cp.entr" "device/src/run.py" "bin/cp.entr" "device/main.py" "yes" "~/src/SwiftAnthropic/" "nvm" "usb_mode" "crawler/src/lib/url.py" "crawler/src/lib/pg.py" "crawler/src/db/SQL.py" "crawler/src/jobs/fetch.py" "crawler/src/db/Doc.py" "crawler/src/db/Q.py" "crawler/src/db/SQL.py" "do_not_crawl_url" "crawler/src/db/SQL.py" "crawler/src/db/Q.py" "crawler/src/lib/http.py" "crawler/src/db/Q.py" "crawler/src/lib/co.py" "ensure_path_has" "crawler/src/jobs/process.py" "get_fqdn" "apex" "crawler/src/db/Q.py" "crawler/src/jobs/process.py" "get_fqdn" "no domain in" "crawler/src/jobs/fetch.py" "crawler/src/jobs/status.py" "crawler/src/jobs/process.py" "cleanup" "dex_user" "doc_fetched" "crawler/src/lib/co.py" "crawler/src/db/Q.py" "crawler/src/lib/co.py" "crawler/src/db/Q.py" "crawler/src/lib/url.py" "crawler/src/db/Doc.py" "db/schema.sql" "crawler/src/.pystartup" "crawler/src/lib/url.py" "db/schema.sql" "crawler/src/lib/url.py" "crawler/src/lib/robotstxt.py" "crawler/src/db/Q.py" "crawler/src/lib/url.py" "crawler/src/lib/http.py" "crawler/src/cfg.py" "crawler/src/db/Doc.py" "crawler/src/cfg.py" "crawler/src/lib/http.py" "crawler/src/lib/co.py" "unmodified" "crawler/src/db/SQL.py" "crawler/src/db/Doc.py" "unexpired" "crawler/src/db/Doc.py" "setting up" "crawler/src/db/__init__.py" "crawler/src/lib/__init__.py" "crawler/src/cfg.py" "asdf" "crawler/src/lib/http.py" "time." "crawler/src/jobs/process.py" "crawler/src/lib/co.py"))
(setq ido-buffer-history '("deploy.yml" "base.yml" "dev.watch-stack" "base.yml" "logic-for-minimal-refetching.html" "Dockerfile" nil "Doc.py" "Q.py" "process.py" "cfg.py" "url.py" "Q.py" "robotstxt.py" "Q.py" "*ag search regexp:cfg. dir:~/src/dex/*" "process.py" "SQL.py" "index.html" "server.py" "index.html" "dust2.py" "server.py" "wells.js" "Dockerfile<node>" "wells.js" "Dockerfile<node>" "Dockerfile" "run.auto" "run" "docker-compose.yml" "Dockerfile" "wells.js" "Dockerfile" "wells.js" "Dockerfile" "server-http.js" "listen.js" "Dockerfile" "screen" "check_fs.py" "main.py" "boot.py" "check_fs.py" "main.py" "run.py" "main.py" "boot.py" "check_fs.py" "main.py" "pixel.py" "main.py" "pixel.py" "main.py" "*ag search regexp:rainbow dir:~/src/rp2040/*" "pixel.py" "main.py" "check_fs.py" "dust2.py" "log.py" "main.py" "run.py" "adafruit_logging.py" "run.py" "check_fs.py" "boot.py" "run.py" "boot.py" "dust.py" "run.py" "adafruit_logging.py" "run.py" "cp" "run.py" "adafruit_logging.py" "boot.py" "check_fs.py" "adafruit_logging.py" "check_fs.py" "init.py" "cp" "boot.py" "run.py" "boot.py" "run.py" "dust.py" "log.py" "boot.py" "pixel.py<.backup>" "boot.py" "check_fs.py" "run.py" "log.py" "adafruit_logging.py" "log.py" "adafruit_logging.py" "log.py" "main.py" "adafruit_logging.py" "init.py"))
(setq projectile-project-command-history '#s(hash-table test equal))
(setq gpt-command-history '("postgres query to get unique domains from url column" "postgres query to get unique domains from a url column" "postgres query to get all unique domain names from a url column"))
